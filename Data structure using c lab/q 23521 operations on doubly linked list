#include<stdio.h>
#include<conio.h>
struct node{        struct node *prev;        int data;        struct node *next;};struct node *START=NULL;struct node *createlist(){        struct node  *n;        n=(struct node *)malloc(sizeof(struct node));        return n;}void insert(){        struct node *ptr,*t;        ptr=createlist();        printf("Enter number: ");        scanf("%d",&ptr->data);        if(START==NULL)        {                ptr->prev=NULL;                ptr->next=NULL;                START=ptr;        }        else        {                t=START;                while(t->next!=NULL)                {                        t=t->next;                }                ptr->prev=t;                t->next=ptr;        }}void deleted(){        struct node *t1,*t2;        int n;        printf("Enter number to delete: ");        scanf("%d",&n);        t1=START;        while(t1->data!=n)        {                t2=t1;                t1=t1->next;                if(t1->next==NULL)                {                        printf("%d not found.\n",n);                        goto step1;                }        }        t2->next=t1->next;        t1->next->prev=t1->prev;        free(t1);        step1:        {                main();        }}void display(){        struct node *t;        if(START==NULL)        {                printf("List is empty.\n");        }        else        {                t=START;                while(t!=NULL)                {                        printf("%d\t",t->data);                        t=t->next;                }        }        printf("\n");}void menu(){        printf("Operations on doubly linked list\n");        printf("1. Insert \n");        printf("2.Remove\n");        printf("3. Display\n");        printf("0. Exit\n");}int main(){        int choice;        while(1)        {                menu();                printf("Enter Choice 0-4? : ");                scanf("%d",&choice);                switch(choice)                {                        case 0:                        {                                exit(0);                                break;                        }                        case 1:                        {                                insert();                                break;                        }                        case 2:                        {                                deleted();                                break;                        }                        case 3:                        {                                display();                                break;                        }                        default:                        {                                printf("\n");     }}}}
